server:
  shutdown: graceful
  tomcat:
    threads:
      max: 200 # 최대 워커 스레드 수 (default : 200)
      min-spare: 10 # 최소 유지 스레드 수 (default : 10)
    connection-timeout: 1m # 연결 타임아웃 (ms) (default : 60000ms = 1m)
    max-connections: 8192 # 최대 동시 연결 수 (default : 8192)
    accept-count: 100 # 대기 큐 크기 (default : 100)
    keep-alive-timeout: 60s # 60s
  max-http-request-header-size: 8KB

spring:
  main:
    web-application-type: servlet
  application:
    name: commerce-api
  profiles:
    active: local
  config:
    import:
      - jpa.yml
      - redis.yml
      - logging.yml
      - monitoring.yml
  cloud.openfeign.client.config.default:
    connect-timeout: 1000
    read-timeout: 2000

springdoc:
  use-fqn: true
  swagger-ui:
    path: /swagger-ui.html

---
spring:
  config:
    activate:
      on-profile: local, test

---
spring:
  config:
    activate:
      on-profile: dev

---
spring:
  config:
    activate:
      on-profile: qa

---
spring:
  config:
    activate:
      on-profile: prd

springdoc:
  api-docs:
    enabled: false

---
seed:
  enabled: true
  drop-and-reseed: true   # 한번 싹 비우고 다시 넣고 싶을 때만 true
  brands: 100
  products: 100000
  batch-size: 1000

---
resilience4j:
  retry:
    instances:
      pg-approve:
        max-attempts: 3
        wait-duration: 200ms
        retry-exceptions:
          - java.io.IOException
          - feign.RetryableException
        ignore-exceptions:
          - org.springframework.web.server.ResponseStatusException
  circuitbreaker:
    configs:
      default:
        slow-call-rate-threshold: 50
        failure-rate-threshold: 50
        slow-call-duration-threshold: 300
        permitted-number-of-calls-in-half-open-state: 1
        max-wait-duration-in-half-open-state: 500
        sliding-window-type: time_based
        sliding-window-size: 10
        minimum-number-of-calls: 2
        wait-duration-in-open-state: 1000
        event-consumer-buffer-size: 1
        register-health-indicator: true
        record-exceptions:
          - java.lang.Throwable
      pg-request-payment:
        slow-call-duration-threshold: 1000
      pg-check-status:
        slow-call-duration-threshold: 200
  timelimiter:
    instances:
      pg-approve:
        timeout-duration: 2s

pg:
  base-url: http://localhost:8082

payment:
  callback-base-url: http://localhost:8080

feign:
  httpclient:
    enabled: true